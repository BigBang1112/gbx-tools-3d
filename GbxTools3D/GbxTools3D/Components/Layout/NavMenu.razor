@rendermode InteractiveServer
@inject NavigationManager NavManager

@{
    var isAbsolute = IsAbsolute || Is3DPage();
}

<div class="navbar @(isAbsolute ? $"navbar-absolute" : "")">
    <div class="container">
        <div class="navbar-left">
            <a class="navbar-brand" href="">3d.gbx.tools</a>
        </div>

        <nav class="@(showBurger ? "show" : "")">
            <div class="nav-item" title="Home">
                <NavLink class="nav-link wide" href="" Match="NavLinkMatch.All">
                    <img src="icons/ui/home.svg" alt="Home" class="icon" width="32" height="32" />
                    <span>Home</span>
                </NavLink>
            </div>

            <div class="nav-item" title="View">
                <NavLink class="nav-link wide" href="view">
                    <img src="icons/ui/pageview.svg" alt="View" class="icon" width="32" height="32" />
                    <span>View</span>
                </NavLink>
            </div>

            <div class="nav-item" title="Catalog">
                <NavLink class="nav-link wide" href="catalog">
                    <img src="icons/ui/menu_book.svg" alt="Catalog" class="icon" width="32" height="32" />
                    <span>Catalog</span>
                </NavLink>
            </div>

            <div class="nav-item" title="Widgets">
                <NavLink class="nav-link wide" href="widgets">
                    <img src="icons/ui/widgets.svg" alt="Widgets" class="icon" width="32" height="32" />
                    <span>Widgets</span>
                </NavLink>
            </div>

            <div class="nav-item" title="About">
                <NavLink class="nav-link wide" href="about">
                    <img src="icons/ui/info.svg" alt="About" class="icon" width="32" height="32" />
                    <span>About</span>
                </NavLink>
            </div>

            <div class="nav-item" title="Blender Gbx Tools">
                <NavLink class="nav-link" href="blender">
                    <img src="icons/ui/blender.svg" alt="Blender" width="32" height="32" />
                </NavLink>
            </div>

            <div class="nav-item" title="Join the Discord server">
                <a class="nav-link discord" href="https://discord.gg/9wAAJvKYyE">
                    <img src="icons/ui/discord.svg" alt="Discord" width="32" height="32" />
                </a>
            </div>

            <div class="nav-item" title="Login">
                <NavLink class="nav-link" href="login">
                    <img src="icons/ui/login.svg" alt="Login" width="32" height="32" />
                </NavLink>
            </div>
        </nav>

        <div class="nav-item burger">
            <button class="burger nav-link @(showBurger ? "active" : "")" @onclick="() => showBurger = !showBurger">
                @if (RendererInfo.IsInteractive)
                {
                    <img src="icons/ui/menu.svg" alt="Menu" width="32" height="32" />
                }
                else
                {
                    <GbxTools3D.Client.Components.Loader Size="20" Thickness="5"></GbxTools3D.Client.Components.Loader>
                }
            </button>
        </div>
    </div>
    @if (isAbsolute)
    {
        <div class="navbar-hoverable navbar-fake-margin"></div>
    }
</div>

@code {
    private bool showBurger;
    private bool showNavbar;

    [Parameter]
    public bool IsAbsolute { get; set; }

    protected override void OnInitialized()
    {
        NavManager.LocationChanged += (sender, args) =>
        {
            if (showBurger)
            {
                showBurger = false;
            }
            StateHasChanged();
        };
    }

    bool Is3DPage()
    {
        var currentPath = NavManager.Uri.Replace(NavManager.BaseUri, ""); // Get relative path
        return currentPath.StartsWith("view/map") ||
               currentPath.StartsWith("view/replay") ||
               currentPath.StartsWith("view/item") ||
               currentPath.StartsWith("view/ghost") ||
               currentPath.StartsWith("view/skin") ||
               currentPath.StartsWith("catalog");
    }
}